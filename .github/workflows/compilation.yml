name: CI

on:
  push:
    branches: 
      - '*'
    tags:
      - v*
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_tag: [pspdev/pspdev, fjtrujy/pspsdk]

    container: ${{ matrix.docker_tag }}:latest
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        apk add build-base git bash
    

    - name: Compile project
      run: |
        make clean all
        psp-gcc -I. -I/usr/local/pspdev/psp/sdk/include -Os -G0 -Wall -g -D_PSP_FW_VERSION=150   -c -o main.o main.c
        psp-gcc -I. -I/usr/local/pspdev/psp/sdk/include -Os -G0 -Wall -g -D_PSP_FW_VERSION=150  -L. -L/usr/local/pspdev/psp/sdk/lib   main.o  -lpspdebug -lpspdisplay -lpspge -lpspctrl -lpspsdk -lc -lpspnet -lpspnet_inet -lpspnet_apctl -lpspnet_resolver -lpsputility -lpspuser -lpspkernel -o hello.elf
        psp-fixup-imports hello.elf

    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
    
    - name: Sanitized Docker Tag
      id: docker_tag
      run: echo "::set-output name=sha8::$(echo ${{matrix.docker_tag}} | sed s:/:__:g)"

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: hello-${{ steps.slug.outputs.sha8 }}-${{ steps.docker_tag.outputs.sha8 }}
        path: |
          hello.elf 
          EBOOT.PBP 
          PARAM.SFO
